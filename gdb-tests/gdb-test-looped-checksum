# Load required GDB commands library
source ../gdb-tests/gdb-test-common

# Connect to the target, load ELF and setup common breakpoints
test_setup_default miv-rv32imaf-dct.elf

# Start the execution of the application on the target
printf "Starting the execution of the application, trying to reach main:\n"
continue


# Fail if wrong breakpoint was triggered here
fail_if_not_test_main

# Do not call "continue" from within a defined function as for some reason
# the attached "commands" with the breakpoints will not trigger
printf "Main reached, continue with the application:\n"  
continue

#Arrived at another breakpoint 
fail_if_not_test_validate_breakpoint

# It's the correct breakpoint (no traphandler), continue with the test evulation


# Only for verbosity display enviroment information Hard/Soft float, 
# Debug/Release and how many iteration the test was running
test_display_enviroment current_iteration

# Compare correct expected checksum with the actual calculated value, consider 
# that the checksum changes depending how many times the algorithm was iterated

if (current_configuration & 4)
    # Hard float
    
    if (current_configuration & 8)
        # Debug hard float  variant has different results than
        assert_equals 0x3440f3d5*current_iteration sum
    else
        # Release hard float variant
        assert_equals 0xe9a76406*current_iteration sum
    end
    
else
    # Soft float
    
    if (current_configuration & 8)
        # Soft float Debug
        assert_equals 0x6673c18e*current_iteration sum
    else
        # Soft float Release
        assert_equals 0x66db2e7d*current_iteration sum
    end
end


# If the test didn't fail on any previous asserts then this means they passed.
# So conclude this whole test as PASS. 
test_passed 
